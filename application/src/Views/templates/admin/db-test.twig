{% extends "base.twig" %}

{% block content %}
<div class="row mb-4">
    <div class="col-12">
        <div class="alert alert-info" role="alert">
            <h5 class="alert-heading">
                <i class="fas fa-database me-2"></i>Database Testing Suite
            </h5>
            <p class="mb-0">Comprehensive database connectivity, integrity, and performance testing tools.</p>
        </div>
    </div>
</div>

<!-- Test Controls -->
<div class="row mb-4">
    <div class="col-12">
        <div class="card">
            <div class="card-header">
                <h5 class="mb-0">
                    <i class="fas fa-play me-2"></i>Test Controls
                </h5>
            </div>
            <div class="card-body">
                <div class="row g-3">
                    <div class="col-md-3">
                        <button class="btn btn-primary w-100" onclick="runTest('connection')">
                            <i class="fas fa-link me-1"></i>Connection Test
                        </button>
                    </div>
                    <div class="col-md-3">
                        <button class="btn btn-success w-100" onclick="runTest('performance')">
                            <i class="fas fa-tachometer-alt me-1"></i>Performance Test
                        </button>
                    </div>
                    <div class="col-md-3">
                        <button class="btn btn-warning w-100" onclick="runTest('tables')">
                            <i class="fas fa-table me-1"></i>Table Integrity
                        </button>
                    </div>
                    <div class="col-md-3">
                        <button class="btn btn-info w-100" onclick="runTest('queries')">
                            <i class="fas fa-search me-1"></i>Query Tests
                        </button>
                    </div>
                </div>
                
                <div class="row mt-3">
                    <div class="col-12">
                        <button class="btn btn-dark" onclick="runAllTests()">
                            <i class="fas fa-vials me-1"></i>Run All Tests
                        </button>
                        <button class="btn btn-outline-secondary ms-2" onclick="clearResults()">
                            <i class="fas fa-eraser me-1"></i>Clear Results
                        </button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Test Results -->
<div class="row">
    <div class="col-12">
        <div class="card">
            <div class="card-header d-flex justify-content-between align-items-center">
                <h5 class="mb-0">
                    <i class="fas fa-clipboard-list me-2"></i>Test Results
                </h5>
                <button class="btn btn-outline-primary btn-sm" onclick="exportResults()" style="display: none;" id="exportBtn">
                    <i class="fas fa-download me-1"></i>Export Results
                </button>
            </div>
            <div class="card-body">
                <div id="testResults">
                    <div class="text-center text-muted py-5">
                        <i class="fas fa-flask fa-3x mb-3"></i>
                        <p>No tests have been run yet. Click a test button above to get started.</p>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Test Progress Modal -->
<div class="modal fade" id="testProgressModal" tabindex="-1" data-bs-backdrop="static">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-body text-center py-4">
                <div class="spinner-border text-primary mb-3" role="status">
                    <span class="visually-hidden">Testing...</span>
                </div>
                <h6 id="testStatus">Running database tests...</h6>
                <div class="progress mt-3">
                    <div class="progress-bar" role="progressbar" style="width: 0%" id="testProgress"></div>
                </div>
            </div>
        </div>
    </div>
</div>
{% endblock %}

{% block extra_js %}
<script>
let testHistory = [];

function runTest(testType) {
    const testNames = {
        'connection': 'Database Connection Test',
        'performance': 'Performance Test',
        'tables': 'Table Integrity Test',
        'queries': 'Complex Query Test'
    };
    
    $('#testStatus').text('Running ' + testNames[testType] + '...');
    $('#testProgress').css('width', '25%');
    $('#testProgressModal').modal('show');
    
    $.get('/admin/db-test/run?type=' + testType)
        .done(function(response) {
            $('#testProgress').css('width', '100%');
            setTimeout(function() {
                $('#testProgressModal').modal('hide');
                displayTestResult(testType, response);
                testHistory.push({
                    type: testType,
                    timestamp: new Date().toISOString(),
                    result: response
                });
                $('#exportBtn').show();
            }, 500);
        })
        .fail(function(xhr) {
            $('#testProgressModal').modal('hide');
            let errorResponse = {
                success: false,
                message: 'Test request failed',
                details: { error: xhr.responseText || 'Unknown error' }
            };
            displayTestResult(testType, errorResponse);
        });
}

function runAllTests() {
    const tests = ['connection', 'performance', 'tables', 'queries'];
    let currentTest = 0;
    
    function runNextTest() {
        if (currentTest >= tests.length) {
            $('#testProgressModal').modal('hide');
            $('#exportBtn').show();
            return;
        }
        
        const testType = tests[currentTest];
        const progress = ((currentTest + 1) / tests.length) * 100;
        
        $('#testStatus').text('Running ' + testType + ' test...');
        $('#testProgress').css('width', progress + '%');
        
        $.get('/admin/db-test/run?type=' + testType)
            .done(function(response) {
                displayTestResult(testType, response);
                testHistory.push({
                    type: testType,
                    timestamp: new Date().toISOString(),
                    result: response
                });
                currentTest++;
                setTimeout(runNextTest, 1000);
            })
            .fail(function(xhr) {
                let errorResponse = {
                    success: false,
                    message: 'Test request failed',
                    details: { error: xhr.responseText || 'Unknown error' }
                };
                displayTestResult(testType, errorResponse);
                currentTest++;
                setTimeout(runNextTest, 1000);
            });
    }
    
    $('#testProgressModal').modal('show');
    runNextTest();
}

function displayTestResult(testType, response) {
    const testNames = {
        'connection': 'Database Connection Test',
        'performance': 'Performance Test',
        'tables': 'Table Integrity Test',
        'queries': 'Complex Query Test'
    };
    
    const testName = testNames[testType];
    const timestamp = new Date().toLocaleString();
    const statusClass = response.success ? 'success' : 'danger';
    const statusIcon = response.success ? 'check-circle' : 'exclamation-triangle';
    
    let resultHtml = `
        <div class="test-result mb-4 border-start border-${statusClass} border-3">
            <div class="ps-3">
                <div class="d-flex justify-content-between align-items-start mb-2">
                    <h6 class="text-${statusClass}">
                        <i class="fas fa-${statusIcon} me-2"></i>${testName}
                    </h6>
                    <small class="text-muted">${timestamp}</small>
                </div>
                
                <div class="alert alert-${statusClass} mb-3">
                    <strong>Result:</strong> ${response.message}
                </div>
    `;
    
    if (response.details) {
        resultHtml += `<div class="mt-3">`;
        
        // Display specific details based on test type
        if (testType === 'connection' && response.details.connection_tests) {
            resultHtml += `
                <h6>Connection Performance:</h6>
                <div class="table-responsive">
                    <table class="table table-sm">
                        <thead>
                            <tr>
                                <th>Test #</th>
                                <th>Response Time</th>
                                <th>Test Time</th>
                            </tr>
                        </thead>
                        <tbody>
            `;
            response.details.connection_tests.forEach(test => {
                resultHtml += `
                    <tr>
                        <td>${test.test_number}</td>
                        <td>${test.response_time}</td>
                        <td>${test.test_time}</td>
                    </tr>
                `;
            });
            resultHtml += `</tbody></table></div>`;
        }
        
        if (testType === 'performance' && response.details.performance_tests) {
            resultHtml += `
                <h6>Performance Metrics:</h6>
                <div class="row">
            `;
            Object.entries(response.details.performance_tests).forEach(([key, test]) => {
                resultHtml += `
                    <div class="col-md-4 mb-2">
                        <div class="card">
                            <div class="card-body py-2">
                                <small class="text-muted d-block">${test.query}</small>
                                <strong>${test.execution_time}</strong>
                                <small class="text-muted">| ${test.result_count} results</small>
                            </div>
                        </div>
                    </div>
                `;
            });
            resultHtml += `</div>`;
        }
        
        if (testType === 'tables' && response.details.foreign_key_tests) {
            resultHtml += `
                <h6>Foreign Key Integrity:</h6>
                <div class="table-responsive">
                    <table class="table table-sm">
                        <thead>
                            <tr>
                                <th>Table</th>
                                <th>Test</th>
                                <th>Orphaned Records</th>
                                <th>Status</th>
                                <th>Time</th>
                            </tr>
                        </thead>
                        <tbody>
            `;
            response.details.foreign_key_tests.forEach(test => {
                const statusBadge = test.status === 'PASS' ? 'success' : 'danger';
                resultHtml += `
                    <tr>
                        <td>${test.table}</td>
                        <td><small>${test.description}</small></td>
                        <td>${test.orphaned_records}</td>
                        <td><span class="badge bg-${statusBadge}">${test.status}</span></td>
                        <td><small>${test.execution_time}</small></td>
                    </tr>
                `;
            });
            resultHtml += `</tbody></table></div>`;
        }
        
        if (testType === 'queries' && response.details.query_tests) {
            resultHtml += `
                <h6>Query Performance:</h6>
                <div class="row">
            `;
            Object.entries(response.details.query_tests).forEach(([key, test]) => {
                resultHtml += `
                    <div class="col-md-6 mb-2">
                        <div class="card">
                            <div class="card-body py-2">
                                <small class="text-muted d-block">${test.description}</small>
                                <strong>${test.execution_time}</strong>
                                <small class="text-muted">| ${test.result_count} results</small>
                            </div>
                        </div>
                    </div>
                `;
            });
            resultHtml += `</div>`;
        }
        
        resultHtml += `</div>`;
    }
    
    resultHtml += `</div></div><hr>`;
    
    // Clear the "no tests" message and add the new result
    if ($('#testResults .text-center.text-muted').length) {
        $('#testResults').empty();
    }
    
    $('#testResults').prepend(resultHtml);
}

function clearResults() {
    $('#testResults').html(`
        <div class="text-center text-muted py-5">
            <i class="fas fa-flask fa-3x mb-3"></i>
            <p>No tests have been run yet. Click a test button above to get started.</p>
        </div>
    `);
    testHistory = [];
    $('#exportBtn').hide();
}

function exportResults() {
    if (testHistory.length === 0) {
        alert('No test results to export');
        return;
    }
    
    const exportData = {
        timestamp: new Date().toISOString(),
        system: 'Software Product Tracking System',
        version: '{{ app_version }}',
        tests: testHistory
    };
    
    const dataStr = "data:text/json;charset=utf-8," + encodeURIComponent(JSON.stringify(exportData, null, 2));
    const downloadAnchorNode = document.createElement('a');
    downloadAnchorNode.setAttribute("href", dataStr);
    downloadAnchorNode.setAttribute("download", "database-test-results-" + new Date().toISOString().split('T')[0] + ".json");
    document.body.appendChild(downloadAnchorNode);
    downloadAnchorNode.click();
    downloadAnchorNode.remove();
}
</script>
{% endblock %}
